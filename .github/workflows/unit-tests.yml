name: Unit Tests

on:
  push:
    branches: [master]
  pull_request:
    types: [opened, synchronize]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [12.x]

    steps:
      - name: Check for changed files
        id: changed_files
        uses: tj-actions/changed-files@v41
        with:
          separator: ','
          files_ignore: |
            package*.json
            app-v2/package*.json

      - name: Check if JS/TS/HTML files are modified
        id: check_js_ts_files
        run: |
          changedFiles="${{ steps.changed_files.outputs.all_changed_files }}"
          echo "Changed files: $changedFiles"
          if [[ $changedFiles =~ \.ts?$|\.js?$|\.html?$ ]]; then
            echo "JS/TS/HTML files are modified."
            echo "::set-output name=js_ts_changed::true"
          else
            echo "No JS/TS/HTML files modified."
            echo "::set-output name=js_ts_changed::false"
          fi

      - name: Check PR Title
        id: check_pr_title
        run: |
          pr_title="${{ github.event.pull_request.title }}"
          if [[ "$pr_title" =~ ^p0 ]]; then
            echo "PR title starts with 'p0'. Skipping unit tests."
            echo "::set-output name=skip_tests::true"
          else
            echo "PR title does not start with 'p0'. Running unit tests."
            echo "::set-output name=skip_tests::false"
          fi
          
      - name: Check out Git repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 16

      - name: Install dependencies
        run: npm install --save-dev --legacy-peer-deps

      - name: Run Tests
        if: steps.check_js_ts_files.outputs.js_ts_changed == 'true' && steps.check_pr_title.outputs.skip_tests != 'true'
        run: npm run test

      - name: Unit Test Coverage
        if: steps.check_js_ts_files.outputs.js_ts_changed == 'true' && steps.check_pr_title.outputs.skip_tests != 'true'
        uses: fylein/comment-test-coverage@master
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          path: coverage/coverage-summary.json
          title: Unit Test Coverage

      - name: Check Coverage Percentage
        if: steps.check_js_ts_files.outputs.js_ts_changed == 'true' && steps.check_pr_title.outputs.skip_tests != 'true'
        run: |
          lines=$(jq '.total.lines.pct' < coverage/coverage-summary.json)
          statements=$(jq '.total.statements.pct' < coverage/coverage-summary.json)
          branches=$(jq '.total.branches.pct' < coverage/coverage-summary.json)
          functions=$(jq '.total.functions.pct' < coverage/coverage-summary.json)

          if (( $(echo "$lines < 95.0" | bc -l) || \
                $(echo "$statements < 95.0" | bc -l) || \
                $(echo "$branches < 91.10" | bc -l) || \
                $(echo "$functions < 94.0" | bc -l) )); then
            echo "Code Coverage Percentage is below thresholds."
            exit 1
          fi
