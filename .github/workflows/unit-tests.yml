name: Unit Tests
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [12.x]

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 16

      - name: Install dependencies
        run: npm install --save-dev --legacy-peer-deps

      - name: Run Tests
        run: npm run test

      - name: Unit Test Coverage
        uses: fylein/comment-test-coverage@master
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          path: coverage/coverage-summary.json
          title: Unit Test Coverage

      - name: Get Code Coverage for Services Folder
        run: |
          SERVICES_COVERAGE=$(cat coverage/coverage-summary.json | jq '.total.lines.pct')
          SERVICES_COVERAGE="${SERVICES_COVERAGE%\"}"
          SERVICES_COVERAGE="${SERVICES_COVERAGE#\"}"
          SERVICES_COVERAGE=$(echo "$SERVICES_COVERAGE > 0" | bc -l)
          echo "::set-output name=services_coverage::$SERVICES_COVERAGE"

      - name: Add Code Coverage Comment
        uses: actions/github-script@v4
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { data: pullRequest } = await github.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.payload.pull_request.number,
            });

            const servicesCoverage = parseInt('${{ steps.get_coverage.outputs.services_coverage }}');
            const servicesCoverageMessage = servicesCoverage > 0
              ? `Code coverage for the services folder is ${servicesCoverage}%`
              : `No code coverage found for the services folder`;

            const comment = `
              **Code Coverage Report**
              
              ${servicesCoverageMessage}
            `;
            
            await github.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: pullRequest.number,
              body: comment
            });
